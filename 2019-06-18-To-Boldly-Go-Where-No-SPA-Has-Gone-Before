








REALTIME FILE


CDA-To Boldly Go Where No SPA Has Gone Before-Livestream

Tuesday, June 18, 2019
7:30 p.m. Eastern Time


REMOTE CART CAPTIONING PROVIDED BY:
ALTERNATIVE COMMUNICATION SERVICES, LLC
www.CaptionFamily.com

























> Seth Kane: This conversation will be geared towards UX and it will be talking about single-page applications and how accessibility works within them and what to take away and work as teams together.

Before we go into detail, it is important for you all to know these things first, so knowing your weapon development best practices, know WCAG is an absolute must if you don't know what those are, you absolutely have to get a grasp on those, they will pave the way for most of what we're talking about. At least one popular screen reader, so those in the room who don't know how to use a screen reader, you won't likely be as successful as possible without knowing it and never go into space alone. Bring UX with you this is critical. I'm not going to go through all of the resources that I have, but there is a list that will be distributed and this is a little bit of folks with a little bit of UX and a little bit of SPA. What is a SPA?  Throughout the presentation, I used background images that are text alternatives, so you can kind of see what those are later on. I'm not going to describe each one because I think there is a lot of information and it will take too long to explain every one.

A single-page application or SPA is a web application or website that interacts with the user by dynamically writing the content or the page through asynchronous calls. A lot of you probably experienced the SPA and one is called a single load where every resource, Java, HTML, CSS, everything is pre-loaded into the browser so the only thing coming out is data and there is a multi-page or dynamic load SPA based on routing or URL's. Materials will be loaded in dynamically so you can do all sorts of different things and have more of a performance site so there are a couple of ways to do it. If you are more interested this that, there is tons of information you can overload yourself in the internet. Here are examples that are all SPAs, Pinterest. This is a non-routing dynamic loading SPA, another example is Linkedin, so Linkedin uses Ember so we'll get into that in a little bit. For most of you have used Gmail that is the quintessential SPA because everything is loaded dynamically.

Why do people or engineering or applications or companies choose SPA?  The one reason is speed. Once it is loaded, it is loaded, so if everybody works with any sort of CVN, once you load the resources, you can you cache them and all you're doing is loading your data, parameters or content. Resource management, so with the dynamic learning SPA, you can have files that pertain to the home page, when you go the a new page, you can load new files in the browser and it only uses the resources that you flood to use for that particular experience. Why load the entire site if the user is on a certain path and they never go down another path.

We assimilate response with CSS, but with SPA, you can do responsive JavaScript, responsive HTML, it opens up the world for different information and different devices and so forth. This is a theoretical practicality, for those using the Internet for a long time, when you click on something and it goes blank and it goes to a new page, the idea is that SPA is seamless. It gives you an opportunity to flow through it faster and not have the perceived loading there are instance that it is not that way but that is why people choose SPA. Am I going too fast?

We going to go through this quickly because I want to get to the good parts. Arrange rue similar background, Ember, jazz, I'm sure there are 50 other ones and tomorrow there will be 50 more. Every cool company or person wants to use what is latest and greatest and I used angular background, they all do the same thing. I'm not remotely going to talk to anything related to each of them. You basically pick your framework and you can apply all of these principles and topics to whatever you choose.

The gravitational pull, why are SPA's typically not accessible this is the big question, right. Number one thing I noticed is bad HTML and no keyboard events, so it's amazing to me how many developers, which are now generally called engineers and most of the engineers are JavaScript engineers don't know how to write good HTML. They let the framework do all of the work that is the number one problem. If you don't have good HTML, you're likely not going to be accessible, with any site, but SPA makes it more difficult. Misuse or no ARIA. It is provided by the W3C for making your HTML markup communicate with screen readers. I don't know if anybody knows this, but ARIA only works with screen readers and some voice recognition software. Every other technology ignores ARIA, lack of focus management, so focused on when you interact with something, where do you go next?  We know blue highlight, chrome is the focus. Lack of communication, what is happening?  So ARIA is a big factor in that, but also what are you trying to communicate to the user and what is happening this second or what is going to happen next and that's a big thing and big changes to the documents. So I have seen a lot of SPAs because it is cool rather than it serves a purpose.

If you have full page changes, you are doing a full-page change and that is a big problem if you're not using all of these different techniques, so when you change the content in the document or the code in the document that is a pretty big challenge, so here are examples. Hopefully, you can see it way in the back. Don't forget the semantics. If it looks like a button and acts like a button, why isn't it a button?  Anybody who doesn't know that W3C, mark it, use it all of the time, is the best thing. I have a picture on the right and what I'm pointing is their H1 tag that is not an H1 tag. It says hero headline, so while this is simple accessibility here but all of the SPA framework and all of these things have code that does what it does and you don't know what the magic is behind it, but unless you're paying close attention to it, you don't know what it is going to do because you're relying on the framework. This was an easy example to do, links, NG tag, you can put an NG tag on anything and make it do anything you want but that doesn't mean you should.

Since most SPAs use custom components, you're writing them from scratch so you need to understand roles, states and properties of what the W3C and WAI dictate to ensure that your custom single-page application is communicating to the screen readers and other assistant technologies. I have a screen shot that has a lunge, but it has a role of a link, so this is kind of a funny conundrum. You have a link but redefining it with ARIA as a lunch. Every screen reader knows it is already a link so why are you using a role of a link?  All you're doing is wasting a code, making your SPA slow, confusing browsers, so misuse of ARIA is a critical thing. If you use it incorrectly, you are likely making something inaccessible rather than accessible.

Based user interaction, unless you are digital perceiving what's happening, there's no way for you to know unless the user experience and the developer tells you where to go next. This is a picture of my G mail and my spam so you can soak it in. It is e-mail I'm about to delete. It is highlighted blue and after deleting the message, this is a question for you, class participation, after deleting the message, where is the likely place that the user's eye or pointer will go?  Click on the delete icon and what will I look for next?  It is probably the next message, right?  I read from left to right from top to bottom and with eye-tracking software, I might do that, so that is a possibility it will happen. If I click and delete that message and I don't use focus management to go to the next message, how am I telling that user that can't proceed with their eyes what to do next?  We have to take focus management into consideration this is a huge, huge thing and without being scientific about it, the majority of the problems with SPA's both for keyboard and any other type of accessible needed user for their site. It is really important.

The other thing is lack of communication, so more often than not, we use visual contents in the URL to communicate change. You plop in new content, animate something, if you can't see it happening, how do you tell the user, communicating what is happening?  Classic example is loading screens. You push submit and it goes to a spinner. You see it but you don't know what is happening. In traditional websites, multipage websites, you get a blank white screen. You get a status indicator in the bottom left-hand corner of the browser. With the screen reader, it announces the percentage of the pages loading, but you do a SPA, you lose all of that. If you aren't communicating what's happening on the screen, you likely are having a very confused user, so passwords things and it says like weak, medium, strong. Passwords are hard enough to fill out to begin with, if you don't know if you're meeting the criteria of the business and it is not communicating with you visually or through assist amount technology, no way you're going to get it right. Countdown timers, Ticketmaster uses countdown timers and if you imagine waiting on 9:00 a.m. to get your Beyonce concert tickets. I was talking about Beyonce earlier, don't judge me. Anyway, if you're sitting there and you don't know you have a minute left or 59 seconds left or 30 seconds left or one many until you can hit the button, you're likely going to miss out on a fabulous concert. New posts, Twitter, Linkedin, things like that are huge, it is constantly sucking in or refreshing the content and if you don't know about, that you're likely missing out on the new fake news. Live chats and updates are important. You need to clearly communicate all the time.

This is a picture of Expedia. If you ever wanted to test this in the real world, go to Expedia. Go on their search page. Use the sort feature or the filter feature and you will hear it saying it is loading and here how many new results there are and new words and all sorts of good stuff. I have the ARIA-LIVE highlighted here.

I want to go to big changes in the documents because this is the biggest thing I see with most places. Most SPAs do not call a new document and what I mean by that is if you're looking a the console or if you know anything about server technology, it is not printing out new HTML on the server side that is why the browser does not get the page release. We're swapping out, if you look at the console and you see it flash, that is what single page application is doing. If you look at the console, you will see a new one come in.

Routes and page times, if you click on from the home page to the about us page, you might change the URL, but you're not calling in new documents, so what do you do when that happens?  Say you're on a site and it drops down a fancy feature and, Google does this, the page does not go away, it brings in the results at the bottom. How are you handling that, right?  Filters and facets and sorting and sending and receiving new content these are the big glaring ones that come into play with loading the documents here are basics on how to solve all of that. Think Linkedin, twitter, Pinterest, some are good, I'm not judging them. Here is what you want to do. When you change the full page in a SPA, change the title tab. The screen reader doesn't get that information, so we need to figure out a way to get the information. You should still do this. It is good for SCO, good for sending out the URL in your social media post, all of that kind of stuff.

I have a screen shot of the title tag that says page Turner. You know consider going from one page to the next and focusing on to the main, like is it important for a user going from the home page to the about page to know about the entire navigation section again. ?  If they want to get to it, you can bring them through landmarks and other things, but they are trying to get to the about us page, so you can focus them to the main content and you see what I'm doing here with a tab and minus one. That means normal keyboard users won't focus to it, it is only java script that your doing it.

Another one is using ARIA label H1's. If you're not using H1's, you're in trouble. If you focus to that main and referencing the H1 and using an ARIA label by, when you focus to it, you don't have to tell it anything else. It will say, hey, I'm on this special page about us, right?  It is already built in through ARIA and so forth. For big page turns, you want to consider using that as a technique as well. Consider using ARIA-LIVE when the page is loading. If you have a slow loading page, if you're calling a large document, you might want, while you're doing that cute spinner, you might want to tell the user that the page is loading so they don't wonder what is happening. ARIA-LIVE is a great way to do that and you will get most of the -- I want to -- I want to demo two examples and I want to get into that. I want to demo and hopefully, the sound works and you can see and hear, but I will explain it as best as possible. So first about the demo, I built this application about four years ago. Number two, at the time, consider anything accessible about it, nothing. I didn't use ARIA. I didn't do anything, but I want to talk about why that is important and the purpose of this SPA, so you understand the context of it, it is like a drop box. A photographer goes to the site, drop it in and choose their page and they would prepare to do an upload for later use, if you ever used a drop box it is a file transfer system. OK, here it goes.

The first thing I'm going to demonstrate, I'm going to walk you through the experience that you're about to see and you won't hear anything because this is just the mouse experience. You're going to drag, drop, or choose, review the upload details and review the attached files and once you put something into the drop area, it is going to be attached and I want to delete the file on purpose like I put that file from there, I want to remove it from the attachments and I'm going to review if anything failed or did not attach. Once it is completed, I'm going to review what attached. You're going to see, unfortunately, what is just a mouse experience here. I just uploaded 10 files, one didn't attach. I'm going to move my mouse to the delete button to delete this file, is what I call it. I click it. It is gone, great. I'm going to review the nonattached files and I'm going to complete the upload and now it is loading each file into the server and -- ignore the space at the bottom. I'm going to review the file of my son that I just uploaded, so that is the normal person experience. I want you to have an idea of the nonaccessible app from a normal person's, person. I'm going to demonstrate this from an accessible point of view that is not accessible. It is going to be the same steps with subtle nuances. I'm going to hit enter, I'm going to select my images through the desktop system.  I'm going to try to review the uploaded details. I'm going to review the attached files. I'm going to delete a file that does not belong and I won't be able to do it. It is impossible and I am going to review the nonattached files and I'm going to complete my upload and try and view one of the images. Again, there is no audio for it. It is keyboard only users, so I might sprinkle in a little bit of voice so you know what is happening. Next slide.

Keyboard user on a non-accessible single-page application I'm demonstrating that I am tabbing to the browse, I see my images, I select them all, they loaded. I'm going to tab to the delete button, which I can't do and I get frustrated so I move on. I'm going to complete my upload and try to tab backwards to view one of my photos, which I can't do.

Class participation, the answer is in from of you on the right, why?  Why can't I use this application from a keyboard perspective?  Right here?  Go ahead. In the brown.
>> [inaudible]
>> Seth Kane: Close, what you have here, I have a picture of it. I'm using an anchor, but I brought it up with HREF and I'm not putting in extra keyboarding handling. Anyone who has been angular, I guarantee you have done this before without the extra clicks and here is the key, NG click that is NG keyboards. Unless you have a keyboard object that is native to it, you are likely causing more problems. I'm going to do this from a screen reader. I'm not going to talk because I want you to hear it. I'm going to talk what task I want you to accomplish. I broken up the same two demos into three sections so the first one is called uploading files. I'm going to scan the page using headers I'm, I'm going to scan for controls, so I'm looking for some sort of button, activate the upload files, select the file, I'm going to get confused and made some assumptions here. I'm telling you right now there is a problem. I'm going to scan for new form controls because I'm confused and jump to upload details and upload detail, hopefully. Let's see how this works out.
>> Headings menu. Not accessible single page, drag and drop files. No files selected, file upload button. No files selected, file upload button. In dialogue, four, single page accessible. 11 items selected, no files selected.
>> Seth Kane: So this is where I'm confused.
>> No files selected. Cancel. Complete upload button. No items in. Headings menu. Level one, level two, drag and drop files. Upload detail, list three items, bullet combined. Line three, bullet files attached, tonight, two of three, bullet files not attached, one, three of three. End of list.
>> Seth Kane: So here is what happened, I used the standard browser to upload files. Once I activated to upload, it told me nothing except for no files attached because I went to the original button that had nothing attached to it. I got confused and I said something must have happened, so I rescanned with the headers and I realized there is new headers and I rescanned looking for different buttons, so I expect because there were not buttons before that I would get a cancel, which I did, but I was looking for a delete or remove button because one of the anticipated action is remove the file, which I didn't get. The same problem we talked about with the HREF missing, it prevents you from getting that information to a screen reader also. All I have done is the first step. I attached 10 successful files and now I want to go to the next step.

The next step, I just told you what went wrong, so in this case, there is no focus management. After I uploaded a file, I probably should go on somewhere where I was told something that is the no focus. I opened it, closed it, I was back to where I began, so these are the things you want to keep in mind. The next thing I want you to see is I'm going to try to delete the file. I know that I added a bad file because it said file not attached, one, or I know I uploaded something but I'm going to try to search for this, so I'm going to jump ahead to the attached files area. I'm going to try to advance to delete this file that's what it is called, a tiff by the way, find the remove button and I'm going to be confused because I can't remove it.
>> Attached file, delete this file tiff.
>> Seth Kane: That is the file.
>> 72-megabytes. Clickable. DSX underscore 374 tiff. Clickable.
>> Seth Kane: So what you can't see because voice over and my screen recorder doesn't capture is me hitting the enter key every time I'm on the X clickable. I don't know if you have never seen this before, would anybody know what X clickable means?  I wouldn't and the fact that I can't click it because I'm not using a mouse is no good either, right?  Again, same problem, HREF, bad communication, visually, I like the idea of the red box with an X. in it to represent a delete can or something like that but the communication is really bad. What went wrong?  No good label on the button and there is no keyboard because I'm not using a browser object. I'm not finding anything on the keyboard. I'm not using it. It is completely inaccessible.

I want to finalize my upload. I have something like 10 files uploaded. I can't find the delete file. I'm getting irritated and I want to be done with it. I want to upload the files so I jump to the nonattached file and advance to the complete upload button, activate the complete upload. I'm confused again. I'm waiting again for a few seconds, I have no idea why and I scan for new headers because I became so frustrated and I tried to figure it out.
>> Level two, not that file time doc. 72-megabytes. The file type is wrong. Cancel button. Complete upload button.
>> Seth Kane: I just hit the enter key, you don't know that because you can't see it. Now, I'm waiting.
>> Heavy level two, not attached files. Upload completed.
>> Seth Kane: Again, confusion, I never got communicated to, so if I do what went wrong again, it was the same principles. In my application there are three main tracks, upload file, delete file, finalize my file and I can't do that because I'm using the same logic and the same codes, no communication, labels and no focus management.

Let's demo the better one and I put asterisks here because I made this better in the last couple of nights, so this was not intentionally built accessible. It was four years old. I wanted to show you in a few nights worth of work, how much can change if you stick to the key principles, I have a nice picture of the sun coming over the earth from NASA. It is pretty fantastic. Let's go through the keyboard user first. You won't hear anything, but tab to choose a file, pick enter to activate it, select the images, review the upload details, review the attached files, delete a file that doesn't belong, complete upload and review images. There is no magic to this so let's check it out. You won't hear anything but I will interject. I'm uploading the file. I select all the files and I focus to upload details when it is finished. I can focus on all of those fancy little red delete buttons or remove buttons and I deleted one, so I'm moving on. I get to the complete upload. I push it and I see the files being uploaded and now I actually see more buttons that look like buttons and say they are buttons and now I see a picture of my son again. From the keyboard perspective, mission accomplished.

What worked?  Focus management, keyboard events there is no magic to it. It's focus in pretty much every framework and the keyboard events, if you're using standard browsing objects, you're good as gold. Let's do the screen reader experience. I broke it up to three tasks and stay on the page with headers. Scan for controls, activate the uploads. I'm confused that I have that striped out that I am no longer confused and don't have to assume. I don't have to scan for new form controls because it is going to show or tell me something, apparently, the lights are going out and I'm going to jump to the upload details. I don't need to do that because it does it for me and I'm going to get the upload details. I'm not going to be distracted by the lights. We're going to hear sound, images, voice over again, so let's see how this works out.
>> Headings menu. Updated single application. Drag and drop files, upload details. Attached files, not attached files, form controls menu, no files selected. File upload button, no files selected, file upload button, no files selected, file upload button in dialogue, single-page application, browser zero items selected. 11 items selected. Upload detail, group. Level two, upload detail, list three item, bullet conformed signs, bullet files attached, 10, two of three. Bullet files not attached, one, three of three. End of list.
>> Seth Kane: OK, so there are a couple of things to take away from it. One, if you saw it, if you perceived it, the minute I activated the file upload, it went to upload details so that is the focus management. The other thing that you may notice, too, you hear all of the cues from the screen reader because something is happening, as before, nothing was happening. You never heard the click or anything speaking there was no magic, just using dot focus and parenthesis and I can't remember what I did then but it is so simple to tell the user what you need to do next. Where to go next and it will generally perceive it in its own time and they will be less confused.

The next step is deleting a file. I'm going to jump to the attached file and I'm going to find the remove butt phone for that file, I'm not going to be confused. I'm going to activate the delete button and I'm going to notice that my file was deleted, somehow.
>> Attached files, group, delete this file tiff. 72-megabytes. Remove to delete this file tiff button. Remove DCS under score 073 this file tiff has been removed.
>> Seth Kane: OK, so --
>> Attached files group.
>> Seth Kane: OK, there is a mistake in this and I did that on purpose, so I'm going to do it one more time and see if people noticed it.
>> Attached files. Level two, attached files, delete this file tiff. 72-megabytes. Remove to delete this file tiff. Underscore 073 tiff button.
>> Seth Kane: I'm going to talk about that for a minute. Does anyone want to try and volunteer and point out what went wrong?  The gentleman with the Chicago shirt.
>> Student:  It deleted the next file down.
>> Seth Kane: SPA, everything words in, if your events are happening faster than your response is happening, you likely have timing issues, so in this case, my focus management went ahead of my communication that the file had been removed, so it is important to note that you might actually have them doing the right things, but you have to pay close attention to the nuances of timing in particular, especially if you're paying with payloads of content or things coming in. I don't have it down here -- oh, I do have it written down. What worked is focus management, I did that. I went to the Gmail example they gave. I had keyboard events and I told the user that the file had been removed, but the timing was a little off, right?  So you have to pay close attention to your asynchronous as well. My fruits of my labor are getting to my files. Complete to upload them, activate it, I am not going to be confused like I was before. I'm not going to worry about waiting, I'm not going to scan the page for new headers and I'm going to review my images. Let's listen to this and see this again.
>> Not attached files, group level two. Not attached files. 72-megabytes. The file type is wrong. End of not attached files, group. Cancel button. Complete upload button. Uploading files, upload completed. Group. Upload completed. List three items, bullet files uploaded, none, one of three. Two of three. Bullet upload time, 3.98, end of list. Upload new button. Upload with same data button.
>> Seth Kane: Now I'm going to look for files.
>> No files selected. File upload button. D serves C underscore tiff button. Underscores 0735 tiff button.
>> Seth Kane: There are a lot of files.
>> Files under score 0376 tiff button.
>> Seth Kane: And the lights are on. So ultimately, what are we doing here?  It should be like a broken record here. After I did an action, I told the user where to go next, ultimately suggesting what to do. I'm using keyboard events through browser objects. I'm not doing anything fancy. You can, but you have to combine those events and telling the user what happened. It said I was waiting or uploading and when it was completed, I was told it was completed and the last portion where it said done view all of the file, I told the user all of the green buttons that this is particular to each image, so I knew I had nothings on the page because there are more and I can go and view them.

Ultimately, from the basics, ensure you have best practice HTML. HTML is super critical here. If you have bad HTML, you have a bad everything. Use keyboard events, so a button should be a button, a link should be a link, a form control should be a form control, you know, avoid those spans with special events on them. your ARIA needs to match the specs I cannot emphasize this enough. This is for anyone who thinks creating an accessible-rich application is difficult, the W3C writes the code for you, it is in the WAI. You can create your own, but use their templates or their guidelines to influence how you should do it. Should it be that?  That is super critical. Focus management is absolutely necessary and using, I recommend using utility, so for those developers in the room, write one component from ARIA-LIVE and just inject the data that you want to communicate into it. There is no reason to have 15 of them. Some sites have a couple, but mostly you can use one utility, when making big changes to the document, instead of all of the above. Without the first couple of points, your application will not be accessible even if it isn't a SPA doing these things.

I truly believe this, I'm a developer and accessible minded and UX thought provoked this is truly a team effort. You cannot make a SPA accessible unless you are working with the developers, working with the user experience, if you have some form of use ability research or testing. The thing you learn in this presentation might not work for you. You have to test, research, analyze how the experience is and for the QA, you have to use the screen readers to test it because there is no way you can do this and know all of the information unless you are hearing, seeing, reacting to all of the stuff yourself. If you're a developer, use a screen reader. I have a picture of the star trek, don't be the red jersey guy because he is the guy that always dies, so work as a team.

I don't remember who said this so I put unknown, but I have been saying it for years, I want you to walk away with this quote, there is a difference between a disability and the things we build being disabling. My first application was built in the eyes of just normal users and it is completely disabling. No one other than able-body people, a lot might be confused anyway, can use it. You have to think with everyone in mind, not just disabilities, everyone in mind. It is really, really important, so make sure you do that. Thank you for coming and thank you for letting me host and if there are questions, I will do my best to answer them for you.
[APPLAUSE]
>> You can raise your hand for questions.
>> Seth Kane: Green shirt, second row right here. Sorry, you have the mic, I get it. I'm not following along. Now I am.
>> Great presentation, by the way. I had a question, so you were talking about focus management and the examples you gave after you triggered everything, I think part of this has to do with the manual user testing, but I'm wondering if moving to different areas of the page versus announcing it could be disoriented?
>> Seth Kane: I'm glad you brought that up. When do you focus management, can you create a disoriented experience, the answer is yes, absolutely and that's why you have to work with UX.  I will give you a classic case that happens all of the time. Let's take my main example, so I recommend focusing to the new page. If your header, generally in a header tag, your navigation, let's say 25 pixels high, small. You are likely not going to notice a focus change. Let's flip it under, let's say the header is 300 pixels. Focus management brings the top of the element that you're focusing to the top of the browser, so if you're going from page-to-page, you're likely hiding visual content, so it doesn't impact the accessibility of it, but it sure impacts the experience for normal users, so yes, you might opt to do focus management and focus on communication. It is important to go through this experience with your user experience partners and know it for yourself, because if you're perceiving something janky as what I call it, but it is accessible, we don't want to make this for some people, we want to make it for everyone. The answer is yes. You could make a worse experience by doing things like focus management if they are not done carefully and correctly, yeah, for sure.
>> So the question is, when you are giving about -- for example, the response comes in terms of --
>> Seth Kane: The timing.
>> Sure, how -- [inaudible]
>> Seth Kane: In my experience, here is the question, the question is how do I address the timing issue of asynchronous and the communication being communicated to the experience?  Without getting too technical, there is a bunch of right ways and maybe not so right ways. The easiest way you can perceive their load time of what is happening and use a set time out, not best practice, but you could use a promise. For those who know a promise, it is a JavaScript terminology that says I am anticipating something coming back, when it comes back, tell me and I promise to wait until you tell me. You can fire the focus or the communication once the promise finishes that is generally the best way to do it there is also cueing things up like ARIA-LIVE and depending on the attribute, so you can have it wait to the end, there is a variety of things but you have to pay close attention to timing, but promises are the best way to do it, in my experience. Good question. A couple more.
>> Thanks for the presentation. It is eye opening for me and mind opening as well. The question I have, not sure if there is an easy answer, but I will ask anyways. The focus thing that you talked about moving it from the accessibility standpoint to making it worse is something that is ableist and bias applications that I've a sensitivity for. Here is an example, there is well known research that humans read text in the order -- in the size of the text. So you read the larger font first regardless of the order, if you click on that slide, your other things on top will still read the thank you first. The point I'm making if there is a screen reader without a lot of effort, you can change the tab order or the size of the text, but things like, that right, someone might have designed an eye-catching ad or something with big text and the smaller text above it with the full intent of eye catching and there by reducing the accessibility for people with different needs who are differently abled. I don't know if there is a good answer to that but if you have tips on how to make the marketing needs or whatever the needs are to present that text so it is not leaving a disability ad.
>> Seth Kane: Please let me know if I do a good job of this. How do you balance marketing, brand, and typography and still compel the read theirs graphic designers and designers want you to be compelled by, and also still be accessible?  OK, first, don't change the tab order. Do not that is a big no-no. Instead, you have to kind of think about the motives, right?  I haven't thought about this answer out so bear with me, but graphic designers generally have a rationale or reason why they do the things they do. Let's take this thank you here, right. Clearly, in this example, I want you to take away three things in this visual hierarchy. Number one, it is the biggest, boldest, and it has space between it. Number two, and my fancy certifications, that I am now proud of, thank you, following that my e-mail and Twitter and the slides those come tertiary to the rest. I did that for a reason, right. Why would your reason for focusing them in a different order ever happen?  The motive should be the same, right?  Why would you want to tell a user to check this out and I'm out using the word "see" for a reason. Know about this thing if it does not have the same visual hierarchy, the same compelling rational for a design. We use H tech. I have seen designers use smaller typography for H1's than H2's, not the best practice, but again, if you think about it, if you can't see it, but you can perceive the value of that at tribute, H1 is bigger, is it so much that visual folks go through a subtly different experience?  As long as it is still behind the same motive that you want them to get this information first?  I could have made it a little bit smaller than my name, but I personally want to thank you guys more importantly than tell you what my name is. Why would I send you all in a screen reader my name first?  That's not my motive that is why user research and user ability research in testing is so important. Designers don't design in a bubble. They are influenced by the business, the brand, and UX and other people first and they design to those needs. We should be developing against the same criteria. We don't want something visually compelling to be last on the list and that comes into play on how you develop your order and all sorts of different things. I hope that answered your question. Again, don't change the tab index.
>> My eyes don't do that. My eyes don't always do that anyway. I notice I went for his name and I went for his e-mail. I ignored thank you. I didn't see it. I was looking for information and I don't know if that relates or not, but I've a tendency to avoid the big text and look for information. I don't know if that jives with anyone else in the room that knows more about UX than I do.
>> Seth Kane: She is pointing out in her particular case that thank you was more or less skimmed over and the predominant way of perceiving the slide was to my name or information. While that wasn't my motive, if that is the case, we will discover that during user ability testing and we may actually decide, if that is the case, let's change the visual design and change the code behind the scenes to down play the thank you if more people are interested in my name, which I appreciate that but thank you. Another question here.
>> So this question isn't fully thought out, but when you are creating a component library for framework and you're working with the designers and you are deciding how many -- when you're trying to figure out where to put the heading tags so that when you have a page that is filled with these components that you have the correct H1's, H2's, H3 on the page because a particular view never has an H1.
>> Seth Kane: The question is, mostly in molecular design have components, you get to pick where things go. Headings are a critical aspect of visual content and accessible content. How do you ensure the right heading is used in the right order if you don't know what the whole page is and all you're doing is components?  Great question. Great conundrum, too. I don't know how recently, but there was a rule change with headings. First of all, in the old days and this is dating myself, you are supposed to have one H1 on the page and that is no longer the case. The W3C states that you should stay in sequential order as best as possible and have it make sense. If you are thinking about dropping a component that has a fixed value for the heading, you should likely go back to your strategy review and see does it have to be fixed?  Can the authors actually choose in the context of where they are dropping the component or can the system itself understand what's on the page at change it?  Here is an example. All the CMS tabs, you can have a component with just a header in a paragraph. That author is allowed to choose from one through six and we use governance to allow them to make a conscious decision according to the specs that's a great way of doing it that is also a risky way of doing it because you're relying on governance, which is easily breakable that is one way to do it. Another way is you have the system do it for you. You have the component and they drop it on a page and put it between 200 components and the first component is H1 and the second component is H2. Maybe the dialogue, I think it is called AM, it says hey, there is an H1 on the page, you put it below it. Do you want it to be a two, three, our four?  You can't do one. Your business logic and your content strategy can be baked into the system. Don't get me wrong, it is a lot of work. It is doable. It can be done, but generally speaking people gravitate towards governance because there is less technology and a lot less work that you have to do to make changes. In our particular case, what we do is we allow the content folks to choose based on what they are doing on the page. You're right. They will likely choose the wrong one from time to time, but the beauty of a CMS or that one in particular, if you're using a code library or design standard, you can change it pretty quickly or you can allow the user to map nip you late it. Governance is generally the rule of thumb, but you can bake that into the code, but it is more difficult. The key takeaway there, as long as it makes sense. Let's say your page has one H1 and four H2's. Who is to tell those H2's aren't the same level of priority?  If they are visually different that is a whole different story. If you're trying to tell a story that each one is important and three other things that are less important, H2, H2, H4, it doesn't make that much of a difference, but if you're talking about a newspaper website, you want to have more strategy into it or if you're talking about a pure marketing content and talking about more strategy. If you're talking about an application, it is generally like they are going to be specific places where you're going to put things and they are not going to change. I hope that answers your question. Two more questions. We'll make them quick. I promise. Or one more at least.
>> I come from a UX background and I know there are developers in the room, I was wondering as an UX professional trying to convince developers to build for accessibility, especially since the user base they don't need such accommodations as a base. I wonder what your thought is on that and how you should go around it.
>> Seth Kane: I'm going to rephrase that question towards this audience. So the question was, as a UX developer, how do you convince developers to do this, right?  OK, whose heard of user acceptance criteria?  Or requirements?  Who has heard of requirements?  Perfect. Where do the requirements generally start?  The business. If the business wants it or they need it or they think they should have it or they want to compel everyone to have goodwill, it starts with the business, which means before the UX does any work, they need to be adhering to the business. A classic example, there are tons of organizations and we need to be at double A. level and that is a requirement and if you are planning to remotely going the accessible route, you need to know what the requirements are. For the UX-ers in the room, I believe the biggest burden is on you guys because the developers just read the acceptance criteria in code but you guys are in charge of creating a an experience for everyone that is key, not demographics, not marketing. They want things out in the public. You need to learn and read and research about what is the best experience so you're meeting the business requirements, so I believe UX has the biggest burden and there is no convincing to developers. They are do what you're told, generally. I'm a developer. I don't know what I do what I'm told. You say you want a button, we make it a button. The UX team makes the decisions, but that is a good question and it is a challenge every day. It is always a challenge. One more according to the time master. One more, sweet.
>> I have a in the weeds question. What is the difference between -- [inaudible]
>> Seth Kane: I'm going to try this quick and I'm going to probably be 50% wrong, so let's go read the specs afterwards to be sure, but ARIA-LIVE is after communicating with a screen reader's current speech, so if it is reading something out loud and you bring something into ARIA-LIVE, it will wait likely until it is finished reading everything else. ARIA busy breaks the application for reading and stops and says it is busy. I think it is the procedure like page loading, but I'm not sure every browser or screen reader uses it or works with it.
>> I barely see ARIA busy.
>> Seth Kane: ARIA-LIVE is unlimited amount of communication, but don't quote me on that, but it is being recorded. I'm going to stick around so if you have other questions feel free.
[APPLAUSE]
>> Thank you and we're cutting off at 8:00, so we have half an hour.

*  *  *  *  *
Communication Access Realtime Translation (CART) is provided in order to facilitate communication accessibility. CART captioning and this realtime file may not be a totally verbatim record of the proceedings.
* * * *

